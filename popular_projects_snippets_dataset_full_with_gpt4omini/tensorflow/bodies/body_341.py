# Extracted from ./data/repos/tensorflow/tensorflow/tools/compatibility/tf_upgrade_v2_test.py
for (text, expected) in [
    ("(expr + yielding(data)).make_one_shot_iterator()",
     "tf.compat.v1.data.make_one_shot_iterator((expr + yielding(data)))"),
    ("dataset.make_one_shot_iterator()",
     "tf.compat.v1.data.make_one_shot_iterator(dataset)"),
    ("dataset.make_one_shot_iterator(shared_name=foo)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset, shared_name=foo)"),
    ("dataset.make_one_shot_iterator(x, y, z)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset, x, y, z)"),
    ("dataset.make_initializable_iterator()",
     "tf.compat.v1.data.make_initializable_iterator(dataset)"),
    ("ds.make_initializable_iterator(shared_name=foo)",
     "tf.compat.v1.data.make_initializable_iterator(ds, shared_name=foo)"),
    ("dataset.make_initializable_iterator(x, y, z)",
     "tf.compat.v1.data.make_initializable_iterator(dataset, x, y, z)"),
    ("tf.data.make_one_shot_iterator(dataset)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset)"),
    ("tf.data.make_one_shot_iterator(dataset, shared_name=foo)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset, shared_name=foo)"),
    ("tf.data.make_one_shot_iterator(dataset, x, y, z)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset, x, y, z)"),
    ("tf.data.make_initializable_iterator(dataset)",
     "tf.compat.v1.data.make_initializable_iterator(dataset)"),
    ("tf.data.make_initializable_iterator(ds, shared_name=foo)",
     "tf.compat.v1.data.make_initializable_iterator(ds, shared_name=foo)"),
    ("tf.data.make_initializable_iterator(dataset, x, y, z)",
     "tf.compat.v1.data.make_initializable_iterator(dataset, x, y, z)"),
    ("tf.compat.v1.data.make_one_shot_iterator(dataset)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset)"),
    ("tf.compat.v1.data.make_one_shot_iterator(dataset, shared_name=foo)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset, shared_name=foo)"),
    ("tf.compat.v1.data.make_one_shot_iterator(dataset, x, y, z)",
     "tf.compat.v1.data.make_one_shot_iterator(dataset, x, y, z)"),
    ("tf.compat.v1.data.make_initializable_iterator(dataset)",
     "tf.compat.v1.data.make_initializable_iterator(dataset)"),
    ("tf.compat.v1.data.make_initializable_iterator(ds, shared_name=foo)",
     "tf.compat.v1.data.make_initializable_iterator(ds, shared_name=foo)"),
    ("tf.compat.v1.data.make_initializable_iterator(dataset, x, y, z)",
     "tf.compat.v1.data.make_initializable_iterator(dataset, x, y, z)")]:
    _, unused_report, unused_errors, actual = self._upgrade(text)
    self.assertEqual(actual, expected)
