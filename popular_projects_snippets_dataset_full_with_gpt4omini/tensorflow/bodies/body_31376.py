# Extracted from ./data/repos/tensorflow/tensorflow/python/kernel_tests/nn_ops/conv_ops_test.py
"""Iterator for smaller versions of convolution shapes in 2015 Inception.

  Relative to inception, each depth value is `depth // shrink`.

  Args:
    shrink: Factor to shrink each depth value by relative to Inception.

  Yields:
    Tuple (input_size, filter_size, out_size, stride, padding), the convolution
    parameters of Inception layers.
  """
input_sizes = [[4, 5, 5, 1248], [4, 8, 8, 384], [4, 8, 8, 384],
               [4, 8, 8, 2048], [4, 8, 8, 448], [4, 8, 8, 2048],
               [4, 8, 8, 2048], [4, 8, 8, 2048], [4, 8, 8, 1760],
               [4, 8, 8, 1760], [4, 8, 8, 1760], [4, 8, 8, 1760],
               [4, 17, 17, 192], [4, 17, 17, 192], [4, 17, 17, 1248],
               [4, 17, 17, 128], [4, 17, 17, 1248], [4, 17, 17, 224],
               [4, 17, 17, 192], [4, 17, 17, 192], [4, 17, 17, 1216],
               [4, 17, 17, 1216], [4, 17, 17, 224], [4, 17, 17, 192],
               [4, 17, 17, 192], [4, 17, 17, 1152], [4, 17, 17, 1152],
               [4, 17, 17, 192], [4, 17, 17, 160], [4, 17, 17, 1152],
               [4, 17, 17, 1024], [4, 17, 17, 128], [4, 17, 17, 1024],
               [4, 17, 17, 128], [4, 17, 17, 1024], [4, 17, 17, 128],
               [4, 17, 17, 768], [4, 17, 17, 128], [4, 17, 17, 128],
               [4, 17, 17, 768], [4, 17, 17, 768], [4, 35, 35, 96],
               [4, 35, 35, 288], [4, 35, 35, 64], [4, 35, 35, 288],
               [4, 35, 35, 256], [4, 35, 35, 48], [4, 35, 35, 256],
               [4, 35, 35, 96], [4, 35, 35, 192], [4, 35, 35, 192],
               [4, 35, 35, 192], [4, 73, 73, 64], [4, 73, 73, 64],
               [4, 147, 147, 24]]
filter_sizes = [[1, 1, 1248, 128], [1, 3, 384, 384], [3, 1, 384, 384],
                [1, 1, 2048, 192], [3, 3, 448, 384], [1, 1, 2048, 320],
                [1, 1, 2048, 448], [1, 1, 2048, 384], [1, 1, 1760, 384],
                [1, 1, 1760, 192], [1, 1, 1760, 448], [1, 1, 1760, 320],
                [3, 3, 192, 192], [3, 3, 192, 192], [1, 1, 1248, 192],
                [3, 3, 128, 320], [1, 1, 1248, 128], [1, 3, 224, 224],
                [3, 1, 192, 256], [1, 3, 192, 256], [1, 1, 1216, 192],
                [1, 1, 1216, 96], [3, 1, 224, 224], [3, 3, 192, 224],
                [1, 3, 192, 192], [1, 1, 1152, 192], [1, 1, 1152, 128],
                [3, 1, 192, 192], [3, 3, 160, 192], [1, 1, 1152, 160],
                [1, 1, 1024, 128], [1, 3, 128, 192], [1, 1, 1024, 160],
                [3, 1, 128, 192], [1, 1, 1024, 256], [3, 1, 128, 128],
                [1, 1, 768, 192], [1, 3, 128, 128], [3, 3, 128, 128],
                [1, 1, 768, 128], [1, 1, 768, 320], [3, 3, 96, 96],
                [3, 3, 288, 384], [3, 3, 64, 96], [1, 1, 288, 64],
                [1, 1, 256, 64], [5, 5, 48, 64], [1, 1, 256, 48],
                [3, 3, 96, 96], [1, 1, 192, 32], [1, 1, 192, 64],
                [1, 1, 192, 48], [3, 3, 64, 192], [1, 1, 64, 64],
                [1, 1, 24, 64]]
out_sizes = [[4, 5, 5, 128], [4, 8, 8, 384], [4, 8, 8, 384],
             [4, 8, 8, 192], [4, 8, 8, 384], [4, 8, 8, 320],
             [4, 8, 8, 448], [4, 8, 8, 384], [4, 8, 8, 384],
             [4, 8, 8, 192], [4, 8, 8, 448], [4, 8, 8, 320],
             [4, 8, 8, 192], [4, 17, 17, 192], [4, 17, 17, 192],
             [4, 8, 8, 320], [4, 17, 17, 128], [4, 17, 17, 224],
             [4, 17, 17, 256], [4, 17, 17, 256], [4, 17, 17, 192],
             [4, 17, 17, 96], [4, 17, 17, 224], [4, 17, 17, 224],
             [4, 17, 17, 192], [4, 17, 17, 192], [4, 17, 17, 128],
             [4, 17, 17, 192], [4, 17, 17, 192], [4, 17, 17, 160],
             [4, 17, 17, 128], [4, 17, 17, 192], [4, 17, 17, 160],
             [4, 17, 17, 192], [4, 17, 17, 256], [4, 17, 17, 128],
             [4, 17, 17, 192], [4, 17, 17, 128], [4, 17, 17, 128],
             [4, 17, 17, 128], [4, 17, 17, 320], [4, 17, 17, 96],
             [4, 17, 17, 384], [4, 35, 35, 96], [4, 35, 35, 64],
             [4, 35, 35, 64], [4, 35, 35, 64], [4, 35, 35, 48],
             [4, 35, 35, 96], [4, 35, 35, 32], [4, 35, 35, 64],
             [4, 35, 35, 48], [4, 71, 71, 192], [4, 73, 73, 64],
             [4, 147, 147, 64]]
strides = [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1
]
# Shrink sizes to make the test faster
for i in input_sizes:
    i[3] //= shrink
for f in filter_sizes:
    f[2] //= shrink
    f[3] //= shrink
for o in out_sizes:
    o[3] //= shrink
# pylint: disable=invalid-name
VALID = "VALID"
SAME = "SAME"
# pylint: enable=invalid-name
paddings = [
    SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME,
    VALID, SAME, SAME, VALID, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME,
    SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME, SAME,
    SAME, SAME, SAME, SAME, SAME, VALID, VALID, SAME, SAME, SAME, SAME, SAME,
    SAME, SAME, SAME, SAME, VALID, VALID, VALID
]
for i, f, o, s, p in zip(input_sizes, filter_sizes, out_sizes, strides,
                         paddings):
    exit((i, f, o, s, p))
