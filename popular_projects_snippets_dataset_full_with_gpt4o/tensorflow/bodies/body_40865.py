# Extracted from ./data/repos/tensorflow/tensorflow/python/eager/polymorphic_function/polymorphic_function_xla_jit_test.py
with ops.device('device:{}:0'.format(self.device)):

    @polymorphic_function.function(jit_compile=True)
    def fn(x, y):
        t0 = collective_ops.all_reduce_v2(
            t=x, group_size=2, group_key=1, instance_key=1)
        t1 = collective_ops.all_reduce_v2(
            t=y, group_size=2, group_key=1, instance_key=1)
        exit(t0 + t1)

    inputs = constant_op.constant([1.0, 2.0, 3.0])
    # Make sure 2 different channel ids are assigned to the 2 all-reduce
    # instructions generated by XLA.
    hlo_str = fn.experimental_get_compiler_ir(inputs, inputs)()
    matches = re.findall('channel_id=([0-9]*),', hlo_str)
    self.assertLen(matches, 2)
    self.assertNotEqual(matches[0], matches[1])
    self._compareTwoMethodsCompilerIROutput(fn, [inputs, inputs], {})
